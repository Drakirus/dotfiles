set -g default-terminal "screen-256color"
set -g escape-time 0
unbind-key C-b
# Azerty keyboard
set-option -g prefix C-Space
bind-key s split-window -h -c "#{pane_current_path}"
bind-key i split-window -v -c "#{pane_current_path}"

set -g status-interval 1

# Reload tmux.conf with prefix-r
bind C-r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# setw -g mode-keys vi
# Bind escape to copy mode
unbind [
bind Escape copy-mode

# Start window numbering at 1 (default => 0)
set -g base-index 1

set-option -g allow-rename off

# mouse
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on
setw -g mode-mouse on

# Smart pane switching with awareness of vim splits
# See this blog post for additional detail:
# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# Resize pane with arrows keys
unbind -n C-Left
unbind -n C-Down
unbind -n C-Up
unbind -n C-Right
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

bind-key c new-window -c "#{pane_current_path}"
bind-key D detach-client -a

set -g set-titles on
set-option -g pane-border-bg colour0
set-option -g pane-border-fg colour238
set-option -g pane-active-border-bg colour0
set-option -g pane-active-border-fg colour245
set-option -g message-bg colour235
set-option -g message-command-bg colour235
set-option -g message-command-fg colour7
set-option -g visual-activity off
#set inactive/active window styles

set-option -g status on                # turn the status bar on
set-option -g history-limit 30000
set -g status-utf8 on                  # set utf-8 for the status bar
set -g status-justify left           # center window list for clarity
setw -g window-status-separator ""::
# setw -g window-status-activity-style ""
# setw -g window-status-bell-style ""
# set -wg mode-style bg=brightblue,fg=brightblack
set -g status-bg colour235

#
#
#
#
set-window-option -g window-status-format "#[fg=colour235,bg=colour8]#[fg=black,bg=colour8] #I:#P #[fg=colour8,bg=brightblue]#[bg=brightblue,fg=black] #W #[fg=brightblue,bg=colour235]"
set-window-option -g window-status-current-format "#[fg=colour235,bg=colour8]#[fg=black,bg=colour8] #I:#P #[fg=colour8,bg=colour5]#[bg=colour5,fg=black] #W #[fg=colour5,bg=colour235]"

set -g message-fg "white"

set -g status-left-length 80
set -g status-left "#[bold,fg=colour232,bg=colour254] #H #[nobold,fg=colour254,bg=colour235]"
set -g status-right-length 80
set -g status-right "#[fg=colour7]%a %d %b %Y #[fg=colour8, bg=colour235]#[fg=black, bg=colour8] %H:%M:%S #[fg=colour254, bg=colour8]#[fg=colour232,bg=colour254, bold] #S "
setw -g xterm-keys on
