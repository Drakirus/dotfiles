set -g default-terminal "screen-256color"
set -g escape-time 0
unbind-key C-b

set-option -g prefix C-Space
bind-key s split-window -h -c "#{pane_current_path}"
bind-key i split-window -v -c "#{pane_current_path}"
bind-key m set-window-option synchronize-panes
set -g status-interval 1

# Reload tmux.conf with prefix-r
bind C-r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# setw -g mode-keys vi
# Bind escape to copy mode
unbind [
bind v copy-mode
bind \; command-prompt

# Start window numbering at 1 (default => 0)
set -g base-index 1

set-option -g allow-rename off

set -g focus-events on

# mouse
set-option -g mouse on

bind-key Space resize-pane -Z
bind-key / copy-mode
bind-key -t vi-copy '/' search-backward

# Smart pane switching with awareness of vim splits
# See this blog post for additional detail:
# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# Alt-h: Previous window
bind -n M-h prev
bind -n M-H prev
# Alt-l: Next window
bind -n M-l next
bind -n M-L next
# Alt-n: New window
bind -n M-n new-window -c "#{pane_current_path}"

# Resize pane with arrows keys
unbind -n C-Left
unbind -n C-Down
unbind -n C-Up
unbind -n C-Right
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

bind-key c new-window -c "#{pane_current_path}"
bind-key D detach-client -a

set -g set-titles on
set-option -g pane-border-bg colour0
set-option -g pane-border-fg colour238
set-option -g pane-active-border-bg colour0
set-option -g pane-active-border-fg colour245
set-option -g message-bg colour235
set-option -g message-command-bg colour235
set-option -g message-command-fg colour7
set-option -g visual-activity off

#set inactive/active window styles
set-option -g status on                # turn the status bar on
set-option -g history-limit 30000
set -g status-justify left
setw -g window-status-separator ""
set -g status-bg colour235

set-window-option -g window-status-format "#[fg=colour7] #I #W "
set-window-option -g window-status-current-format "#[fg=colour7, bg=colour124] #I #W "

set -g message-fg "white"

set -g status-left-length 80
set -g status-left " #[fg=yellow]#S "
set -g status-right-length 80
set -g status-right "#{prefix_highlight} #[fg=yellow]%a %d %b %Y #[fg=colour246, bg=colour235]î‚²#[fg=colour235, bg=colour246] %H:%M:%S "
setw -g xterm-keys on

# faster scroll select pane and vim
bind -n WheelUpPane select-pane -t= \; if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M; send-keys -M; send-keys -M; send-keys -M' 'copy-mode -e; send-keys -M; send-keys -M; send-keys -M; send-keys -M'"
bind -n WheelDownPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M; send-keys -M; send-keys -M; send-keys -M' 'copy-mode -e; send-keys -M; send-keys -M; send-keys -M; send-keys -M'"

# Stay in copy mode on drag end.
unbind-key -t vi-copy MouseDragEnd1Pane
# save to clipboard on Enter
bind-key -t vi-copy Enter copy-pipe "xclip -in -selection clipboard"

run-shell ~/.tmux-resurrect/resurrect.tmux
set -g @resurrect-processes 'ssh psql mysql "~./redis-server->./redis-server" "~./redis-cli" "~./manage.py runserver->cd . && ./manage.py runserver" "~http-server-> http-server"'

